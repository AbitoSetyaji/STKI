# -*- coding: utf-8 -*-
"""CosineSimilarity.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MMiWF9InljjsS_pu_PY3JYpYSXue7Qas
"""

# Let's implement the Cosine Similarity calculation in Python based on the provided document and query data.

import numpy as np

# Define documents and query
documents = [
    "daun bewarna coklat",  # Document 1
    "bunga bewarna hijau",   # Document 2
    "rumput bewarna hijau"   # Document 3
]
query = "daun hijau"  # Query

# Preprocess function to get terms from text
def preprocess(text):
    return text.lower().split()

# Create a vocabulary of all unique words in the documents and query
vocabulary = set(preprocess(query))
for doc in documents:
    vocabulary.update(preprocess(doc))
vocabulary = sorted(list(vocabulary))

# Function to create a term frequency vector for a document/query
def term_frequency(text, vocabulary):
    terms = preprocess(text)
    return np.array([terms.count(word) for word in vocabulary])

# Create term frequency vectors for documents and query
tf_documents = np.array([term_frequency(doc, vocabulary) for doc in documents])
tf_query = term_frequency(query, vocabulary)

# Cosine Similarity function
def cosine_similarity(vec1, vec2):
    dot_product = np.dot(vec1, vec2)
    norm_vec1 = np.linalg.norm(vec1)
    norm_vec2 = np.linalg.norm(vec2)
    return dot_product / (norm_vec1 * norm_vec2)

# Calculate cosine similarity between query and each document
similarities = [cosine_similarity(tf_query, tf_doc) for tf_doc in tf_documents]

similarities